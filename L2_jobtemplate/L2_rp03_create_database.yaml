---
# JobTemplate: L2_rp03_create_database
# Create Database
# Survey: namespace_name
# Inventry: database_app_name, pg_user, pg_database, pg_password
- hosts: localhost
  tasks:
    - name: Create Database Deployment
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: "{{ namespace_name }}"
            name: "{{ database_app_name }}"
            labels:
              app: postgresql
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: postgresql
            template:
              metadata:
                labels:
                  app: postgresql
              spec:
                containers:
                  - name: postgresql
                    image: registry.redhat.io/rhel8/postgresql-15:latest
                    imagePullPolicy: "IfNotPresent"
                    ports:
                      - containerPort: 5432
                    env:
                      - name: POSTGRESQL_USER
                        value: "{{ pg_user }}"
                      - name: POSTGRESQL_DATABASE
                        value: "{{ pg_database }}"
                      - name: POSTGRESQL_PASSWORD
                        value: "{{ pg_password }}"

    - name: Create Database Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ database_app_name }}"
            namespace: "{{ namespace_name }}"
            labels:
              app: postgresql
          spec:
            type: ClusterIP
            ports:
              - name: 5432-tcp
                protocol: TCP
                port: 5432
                targetPort: 5432
            sessionAffinity: None
            selector:
              app: postgresql
          status:
            loadBalancer: {}

    # Search Pods
    - name: Search Pods
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ namespace_name }}"
        label_selectors:
          - app: postgresql
      register: l3_st01_result_pod

    # Get Podname
    - name: Get Podname
      set_fact: 
        podname: "{{ l3_st01_result_pod.resources[0].metadata.name }}"

    # Wait Pod Creation
    - name: Get Pod Info
      kubernetes.core.k8s_info:
        kind: Pod
        name: "{{ podname }}"
        namespace: "{{ namespace_name }}"
      register: l3_st01_result_pod
      until: l3_st01_result_pod.resources[0].status.phase == "Running"
      retries: 5
      delay: 10