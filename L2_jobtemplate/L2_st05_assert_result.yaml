---
# JobTemplate: L2_st05_assert_result
# Survey: test_id, test_result_seq, name, simulation_date
# Inventry: pipeline_repo_domain, pipeline_repo_name
- name: Start Scenario
  hosts: localhost
  tasks:
    - name: Git clone
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_ut01_gitclone.yaml

    - name: Get data-setup podname
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_st08_get_data_setup_podname.yaml
      vars:
        namespace_name: "{{ pipeline_vars.namespace_name }}"

    - name: Copy file
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_st09_copy_file_assert.yaml
      vars:
        namespace_name: "{{ pipeline_vars.namespace_name }}"

    - name: include_vars
      include_vars: 
        file: /tmp/{{ pipeline_repo_name }}/{{ test_id }}/test_scenario/{{ name }}/p4_assert_result/task/assert_task.yaml
        name: assert_vars

    # Assert Task
    - name: Run Assert
      ansible.builtin.include_tasks:
        file: L3_tasks/L3_st10_assert_task.yaml
      vars:
        namespace_name: "{{ pipeline_vars.namespace_name }}"
        assert_task_name: "{{ assert_task.name }}"
        assert_type: "{{ assert_task.type }}"
      loop: "{{ assert_vars.tasks }}"
      loop_control:
        loop_var: assert_task
      when: pipeline_vars.parameters.test_scenario.{{ name }}.assert_result == true

    # Report Summary
    - name: Report Pipeline Summary
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_rp03_run_pipeline_summary.yaml
      vars:
        test_group: "テストシナリオ"
        test_pipeline: "結果検証"
        simulation_date : "{{ simulation_date }}"
      when: pipeline_vars.parameters.test_scenario.{{ name }}.assert_result == true
