---
# JobTemplate: L2_st05_assert_result
# Survey: test_id, test_result_seq, name, simulation_date
# Inventry: pipeline_repo_domain, pipeline_repo_name
- name: Start Scenario
  hosts: localhost
  tasks:
    - name: Git clone
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_ut01_gitclone.yaml

    - name: Get data-setup podname
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_st08_get_data_setup_podname.yaml
      vars:
        namespace_name: "{{ pipeline_vars.namespace_name }}"

    - name: Copy sql and expected
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_st09_copy_file_assert.yaml
      vars:
        namespace_name: "{{ pipeline_vars.namespace_name }}"

    # Find j2 file
    - name: Find j2 files
      ansible.builtin.find:
        paths: /tmp/{{ pipeline_repo_name }}/{{ test_id }}/test_scenario/{{ name }}/p4_assert_result/task
        patterns: "*.j2"
        file_type: file
      register: found_files

    # Delegate apply task
    - name: Run Batch App
      ansible.builtin.include_tasks:
        file: L3_tasks/L3_st00_apply_task.yaml
      vars:
        source_j2_path: "{{ item.path }}"
        namespace_name: "{{ pipeline_vars.namespace_name }}"
        test_result_seq: "{{ test_result_seq }}"
        test_id: "{{ test_id }}"
        test_group: "テストシナリオ"
        test_pipeline: "結果検証"
        simulation_date: "{{ simulation_date }}"
        sw_category: "バッチ"
      loop: "{{ found_files.files }}"
      loop_control:
        label: "{{ item.path }}"

    # Report Summary
    - name: Report Pipeline Summary
      ansible.builtin.import_tasks:
        file: L3_tasks/L3_rp03_run_pipeline_summary.yaml
      vars:
        test_group: "テストシナリオ"
        test_pipeline: "結果検証"
        simulation_date : "{{ simulation_date }}"
