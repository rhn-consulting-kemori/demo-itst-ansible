---
# L3_st01_apply_openshift
# Parameter:
# * source_yaml_path, namespace_name, app_name
# ---
# + start_timestamp, end_timestamp, test_result
# + podname, imageid, image, phase
- name: Start timestamp
  set_fact: 
    start_timestamp: '{{ lookup(''pipe'', ''date "+%Y-%m-%d %H:%M:%S"'') }}'

- name: Apply block
  block:
    # Apply
    # * source_yaml_path
    - name: Apply Yaml
      kubernetes.core.k8s:
        state: present
        src: "{{ source_yaml_path }}"

    # Search Pods
    # * namespace_name, app_name
    - name: Search Pods
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ namespace_name }}"
        label_selectors:
          - "app = {{ app_name }}"
      register: l3_st01_result_pod

    # Debug
    - name: Debug podname
      debug:
        var: l3_st01_result_pod

    # Get Podname
    - name: Get Podname
      set_fact: 
        podname: "{{ l3_st01_result_pod.resources[0].metadata.name }}"

    # Wait Pod Creation
    - name: Wait till the Pod is created
      kubernetes.core.k8s_info:
        kind: Pod
        wait: yes
        name: "{{ podname }}"
        namespace: "{{ namespace_name }}"
        wait_sleep: 10
        wait_timeout: 360
      register: l3_st01_result_pod

    - name: Get imageID
      set_fact: 
        imageid: "{{ l3_st01_result_pod.resources[0].status.containerStatuses[0].imageID }}"
        image: "{{ l3_st01_result_pod.resources[0].status.containerStatuses[0].image }}"
        phase: "{{ l3_st01_result_pod.resources[0].status.phase }}"

    - name: Set test_result OK
      set_fact:
        test_result: "OK"
      when: phase == "Succeeded" or phase == "Running"

    - name: Set test_result NG
      set_fact:
        test_result: "NG"
      when: phase != "Succeeded" and phase != "Running"

  rescue:
    - name: Set test_result NG
      set_fact:
        test_result: "NG"

- name: End timestamp
  set_fact:
    end_timestamp: '{{ lookup(''pipe'', ''date "+%Y-%m-%d %H:%M:%S"'') }}'

- name: print vars
  debug:
    msg: "podname={{ podname }}, phase={{ phase }}, imageid={{ imageid }}, image={{ image }}"
